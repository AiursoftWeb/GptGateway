using System.Text.Json.Serialization;

namespace Aiursoft.GptGateway.Api.Models;

public class CompletionData
{
    /// <summary>
    /// The ID of the completion.
    /// </summary>
    [JsonPropertyName("id")]
    public string? Id { get; set; }

    /// <summary>
    /// The type of the object, which is always "text_completion".
    /// </summary>
    [JsonPropertyName("object")]
    public string? Object { get; set; }

    /// <summary>
    /// The timestamp when the completion was created.
    /// </summary>
    [JsonPropertyName("created")]
    public int? Created { get; set; }

    /// <summary>
    /// The name of the model used to generate the completion.
    /// </summary>
    [JsonPropertyName("model")]
    public string? Model { get; set; }

    /// <summary>
    /// The usage data for this completion.
    /// </summary>
    [JsonPropertyName("usage")]
    public UsageData? Usage { get; set; }

    /// <summary>
    /// The list of choices generated by the completion.
    /// </summary>
    [JsonPropertyName("choices")]
    // ReSharper disable once CollectionNeverUpdated.Global
    // ReSharper disable once CollectionNeverQueried.Global
    public List<ChoicesItemData>? Choices { get; set; } = new();
    
    [JsonPropertyName("message")]
    public MessageData? Message { get; set; }
    
    public string GetContent()
    {
        if (Choices != null && Choices.Count != 0)
        {
            return Choices.First().Message?.Content ?? string.Empty;
        }
        return Message?.Content ?? string.Empty;
    }
    
    public void SetContent(string content)
    {
        // Fill the Choices because some front-end code may rely on it.
        if (Choices == null || Choices.Count == 0)
        {
            Choices =
            [
                new ChoicesItemData
                {
                    Message = new MessageData
                    {
                        Content = content,
                        Role = "assistant"
                    }
                }
            ];
        }

        // Fill the Message because some front-end code may rely on it.
        Message ??= new MessageData
        {
            Role = "assistant",
        };
        Message.Content = content;
    }
}